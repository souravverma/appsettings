{
  "name": "ce-api-harness",
  "version": "3.2.4",
  "description": "A Core ELEC API to store and read harness data",
  "repository": {
    "type": "git",
    "url": "https://github.airbus.corp/Airbus/1t21-ce-api-harness"
  },
  "type": "commonjs",
  "main": "dist/server.js",
  "scripts": {
    "start": "npm run serve",
    "build": "npm run build-ts",
    "serve": "node dist/server.js",
    "watch-node": "nodemon dist/server.js --config nodemon.json",
    "watch": "concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run watch-node\"",
    "build-ts": "tsc",
    "watch-ts": "tsc -w",
    "lint": "eslint . --ext .ts",
    "lint-debug": "eslint . --ext .ts --fix",
    "debug": "npm run build && npm run watch-debug",
    "serve-debug": "nodemon --inspect dist/server.js",
    "watch-debug": "concurrently -k -p \"[{name}]\" -n \"Sass,TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run serve-debug\"",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prepare": "husky install"
  },
  "contributors": [
    "Yoann Miotto <yoann.miotto.external@airbus.com>",
    "Alexis Dar√© <alexis.dare.external@airbus.com>",
    "Amit Mukherjee<amit.mukherjee.external@airbus.com>"
  ],
  "keywords": [
    "javascript",
    "typescript",
    "backend",
    "microservice",
    "nodejs",
    "api"
  ],
  "license": "ISC",
  "dependencies": {
    "@airbus/lib-auth-express": "^2.0.2",
    "@apidevtools/swagger-parser": "^10.0.2",
    "@eneto/axios-es6-class": "^2.0.1",
    "@types/passport": "^1.0.6",
    "@types/passport-jwt": "^3.0.5",
    "axios": "^0.21.0",
    "body-parser": "^1.18.3",
    "cors": "^2.8.5",
    "dotenv": "^6.2.0",
    "express": "^4.16.4",
    "helmet": "^3.15.0",
    "jest-sonar-reporter": "^2.0.0",
    "jest-xml-matcher": "^1.2.0",
    "jsonwebtoken": "^8.5.1",
    "lib-central-logger": "^0.1.7",
    "passport": "^0.4.1",
    "pg": "^8.0.0",
    "reflect-metadata": "^0.1.12",
    "sequelize": "^6.6.2",
    "sequelize-typescript": "^2.1.0",
    "swagger-jsdoc": "^3.2.6",
    "swagger-ui-express": "^4.0.2",
    "tsyringe": "^4.5.0",
    "xml-formatter": "^2.1.0",
    "xml-writer": "^1.7.0",
    "xmldom": "^0.5.0",
    "xmlserializer": "^0.6.1"
  },
  "devDependencies": {
    "@types/body-parser": "^1.17.0",
    "@types/cors": "^2.8.4",
    "@types/dotenv": "^6.1.0",
    "@types/express": "^4.16.0",
    "@types/helmet": "0.0.42",
    "@types/jest": "^27.0.1",
    "@types/node": "^8.10.38",
    "@types/parse5": "^5.0.3",
    "@types/passport-jwt": "^3.0.5",
    "@types/pg": "^8.0.0",
    "@types/sequelize": "^4.28.8",
    "@types/supertest": "^2.0.6",
    "@types/swagger-jsdoc": "0.0.2",
    "@types/swagger-ui-express": "^3.0.0",
    "@types/validator": "10.11.3",
    "@types/winston": "^2.4.4",
    "@types/xmlserializer": "^0.6.0",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "babel-jest": "^27.1.1",
    "concurrently": "^4.1.0",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-config-standard": "^16.0.3",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-promise": "^5.1.0",
    "jest": "^27.1.0",
    "nodemon": "^1.18.7",
    "prettier": "^2.3.2",
    "sequelize-mock": "^0.10.2",
    "supertest": "^3.3.0",
    "ts-jest": "^27.0.5",
    "tslint": "^5.17.0",
    "typescript": "^3.1.6",
    "husky": "^7.0.0"
  },
  "publishConfig": {
    "registry": "https://artifactory.fr.eu.airbus.corp/1Y40/api/npm/R-1T21_npm_L/"
  },
  "jest": {
    "testResultsProcessor": "jest-sonar-reporter",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "jestSonar": {
    "reportPath": "coverage",
    "reportFile": "test-reporter.xml",
    "indent": 4
  }
}
